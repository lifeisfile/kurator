taskTitle: Задание номер 1
taskID: task1
isFree: true
intro: > 
    Тут вводный текст. А ниже уже идут шаги. Каждый шаг имеет свой statusHandler и runHandler
goals:
  - id: step1-1
    statusHandler: check_cluster_handler #Checks if step is completed
    runHandler: run_cluster_handler #Run this handler on button click
    contents: 
      - kind: button
        id: cluster_start
        text: Запустить кластер
        disableOnClick: 1800
      - kind: text
        content: | 
          После того, как вы нажали на кнопку через некоторое время (до 5 минут) кластер будет запущен специально для вас и никто другой из студентов к нему доступ иметь не будет.
      
  - id: step1-2
    runHandler: download_cluster_config_handler #Run this handler on button click
    statusHandler: check_cluster_config_downloaded
    contents: 
      - kind: text
        content: ---
      - kind: text
        content: | 
          Теперь, когда кластер создан, вы можете скачать файл конфигурации. Он вам понадобится начиная со следующей задачи.
      - kind: button
        id: download_cluster_config
        text: Скачать файл конфигурации
        disableOnClick: -1
      - kind: whatHappened
        content: |
          Нажав кнопку, наш серверный скрипт запустил в облаке новый кластер k8s  
          Файл конфигурации, который вы скачали себе, содержит все необходимые данные для подключения к кластеру: ***IP адрес/имя хоста и ключ авторизации.***

          ---
          **Кстати, что это за IP адрес в файле конфигурации?**
          
          Это адрес Master API сервера Kubernetes, через который обращается клиентская утилита *kubectl*, которую мы рассмотрим в следующей Практике 2. 
          На этот момент вам просто нужно знать, что API endpoint это точка обращения для управления кластером, которая по сути использует знакомый HTTPS протокол.
      - kind: text
        content: | 
          
          ### Зачем мне знать версию кластера?
      
      # Вывод данных со стороны сервера
      - kind: server
        sourceHandler: cluster_info_output
        cacheKey: ""    

# Необязательный раздел FAQ
faqs:
    - question: Как запускается кластер в реальной работе?
      answer: |
        Для этого есть несколько способов:
        1. Через консоль облачного провайдера   
          *По сути, это веб интерфейс для управления кластером и другими облачными ресурсами.*
        2. Через terraform  
           *Инструмент для автоматизации с использованием подхода IaaC - Инфраструктура как код*
        3. Вручную через kubeadm   
           *Когда требуется развернуть свой кубер на своем железе или виртуальном окружении.*
        4. С помощью инструментов управления вроде Rancher
    
    - question: Какие дистрибутивы kubernetes существуют?
      answer: |
        1. [Ванильный k8s](https://kubernetes.io)
        2. [k3s](https://k3s.io/)
        3. [Micro-k8s](https://microk8s.io/)
        4. [k0s](https://k0sproject.io/)
        5. [Openshift](https://www.openshift.com/)

        В этом курсе будем рассматривать работу с ванильным(оригинальным) kubernetes, но базовые принципы будут работать и в остальных вариантах
    
    - question: "Какой вариант мне выбрать для запуска k8s: managed или self-hosted?"
      answer: |
        Если у вас нет особенных требований по запуску инфраструктуры исключительно на своем оборудовании, тогда рекомендумый вариант - **облачный**.
        Это проще в установке и поддержанию, а по уровню надежности и безопасности в целом ничем не уступает. Выбирайте известные "облака": GKE, AWS EKS, AKS, DOKS и др.  

        
        >*Опыт автора:* В те относительно давние времена(2017-2018 года), когда был уже принят закон 152-ФЗ (о размещении персональных данных на территории РФ), 
        >но никто из отечественных облаков не предоставлял услуги управляемого k8s хостинга, мне приходилось поднимать и поддерживать k8s кластер самостоятельно. 
        >Это было довольно трудозатратно. И при первой возможности мы переехали в Яндекс.Облако(когда у них зарелизился managed kubernetes).
        
